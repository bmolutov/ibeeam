version: "3.3"

services:

  cache:
    container_name: cache
    image: redis:7.0.5-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server
    volumes:
      - ./cache:/data

  pgdb:
    container_name: postgres
    restart: always
    build:
      context: ibeeam/pgdb
      dockerfile: Dockerfile
    volumes:
      - ./ibeeam/data/db:/var/lib/postgresql/data
    env_file:
      - ./ibeeam/ibeeam/.env

  web:
    container_name: django
    restart: always
    build:
      context: ./ibeeam
      dockerfile: Dockerfile
    volumes:
      - ./ibeeam:/usr/src/app/ibeeam
      - ./ibeeam/static:/static
      - ./ibeeam/media:/media
    ports:
      - '8000:8000'
    env_file:
      - ./ibeeam/ibeeam/.env
    depends_on:
      - pgdb
      - cache

  celery_web:
    container_name: celery_web
    restart: always
    build:
      context: ./ibeeam
      dockerfile: Dockerfile
    command: celery -A ibeeam worker -l INFO
    volumes:
      - ./ibeeam:/usr/src/app/ibeeam
    env_file:
      - ./ibeeam/ibeeam/.env
    depends_on:
      - web
      - cache

  mongodb:
    container_name: mongodb
    restart: always
    build:
      context: auxiliary/app/mongodb
      dockerfile: Dockerfile
    volumes:
      - ./auxiliary/data/db:/data/db
    ports:
      - '27017:27017'

  aux:
    container_name: fastapi
    restart: always
    build:
      context: ./auxiliary
      dockerfile: Dockerfile
    volumes:
      - ./auxiliary/app:/usr/src/app/auxiliary
    ports:
      - '8001:8001'
    env_file:
      - ./auxiliary/app/.env
    depends_on:
      - mongodb
      - cache

  nginx:
    container_name: nginx
    restart: always
    build:
      context: ./ibeeam/nginx
      dockerfile: Dockerfile
    volumes:
      - ./ibeeam/nginx/conf.d/:/etc/nginx/conf.d/
      - ./ibeeam/static:/static
      - ./ibeeam/media:/media
    ports:
      - '80:80'
    depends_on:
      - web
      - aux
      - cache
