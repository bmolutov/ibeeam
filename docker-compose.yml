version: "3.3"

services:

#  db:
#    container_name: postgres
#    restart: always
#    build:
#      context: ibeeam/DB
#      dockerfile: ibeeam/DB/db.Dockerfile
#    volumes:
#      - ./data/db:/var/lib/postgresql/data
#    env_file:
#      - ibeeam/ibeeam/.env

#  web:
#    container_name: django
#    restart: always
#    build:
#      context: ibeeam
#      dockerfile: ibeeam/Dockerfile
#    volumes:
#      - .:/code
#      - ./ibeeam/static:/static
#      - ./ibeeam/media:/media
#    ports:
#      - "8000:8000"
#    env_file:
#      - ibeeam/ibeeam/.env
#    depends_on:
#      - db

  mongodb:
    container_name: mongodb
#    env_file:
#      - ./auxiliary/app/.env
#    environment:
#      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
#      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
#      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    restart: always
    build:
      context: auxiliary/app/DB
      dockerfile: db.Dockerfile
    volumes:
      - ./data/db:/var/lib/mongodb/data
    ports:
      - "27017:27017"

  aux:
    container_name: fastapi
    restart: always
    build:
      context: auxiliary
      dockerfile: Dockerfile
    volumes:
      - ./auxiliary/app:/code
    ports:
      - "8001:8001"
    depends_on:
      - mongodb

#  nginx:
#    container_name: nginx
#    restart: always
#    build:
#      context: ibeeam/nginx
#      dockerfile: ibeeam/nginx/Dockerfile
#    volumes:
#      - ./nginx/conf.d/:/etc/nginx/conf.d/
#      - ./static:/static
#      - ./media:/media
#    ports:
#      - "80:80"
#    depends_on:
#      - web
